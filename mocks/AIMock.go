// Code generated by MockGen. DO NOT EDIT.
// Source: glamour_reserve/features/services (interfaces: BeautyCareInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockBeautyCareInterface is a mock of BeautyCareInterface interface.
type MockBeautyCareInterface struct {
	ctrl     *gomock.Controller
	recorder *MockBeautyCareInterfaceMockRecorder
}

// MockBeautyCareInterfaceMockRecorder is the mock recorder for MockBeautyCareInterface.
type MockBeautyCareInterfaceMockRecorder struct {
	mock *MockBeautyCareInterface
}

// NewMockBeautyCareInterface creates a new mock instance.
func NewMockBeautyCareInterface(ctrl *gomock.Controller) *MockBeautyCareInterface {
	mock := &MockBeautyCareInterface{ctrl: ctrl}
	mock.recorder = &MockBeautyCareInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBeautyCareInterface) EXPECT() *MockBeautyCareInterfaceMockRecorder {
	return m.recorder
}

// AskAboutBeauty mocks base method.
func (m *MockBeautyCareInterface) AskAboutBeauty(arg0, arg1, arg2, arg3 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AskAboutBeauty", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AskAboutBeauty indicates an expected call of AskAboutBeauty.
func (mr *MockBeautyCareInterfaceMockRecorder) AskAboutBeauty(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AskAboutBeauty", reflect.TypeOf((*MockBeautyCareInterface)(nil).AskAboutBeauty), arg0, arg1, arg2, arg3)
}

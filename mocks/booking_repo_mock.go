// Code generated by MockGen. DO NOT EDIT.
// Source: glamour_reserve/features/repositories (interfaces: BookingRepoInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	core "glamour_reserve/entity/core"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockBookingRepoInterface is a mock of BookingRepoInterface interface.
type MockBookingRepoInterface struct {
	ctrl     *gomock.Controller
	recorder *MockBookingRepoInterfaceMockRecorder
}

// MockBookingRepoInterfaceMockRecorder is the mock recorder for MockBookingRepoInterface.
type MockBookingRepoInterfaceMockRecorder struct {
	mock *MockBookingRepoInterface
}

// NewMockBookingRepoInterface creates a new mock instance.
func NewMockBookingRepoInterface(ctrl *gomock.Controller) *MockBookingRepoInterface {
	mock := &MockBookingRepoInterface{ctrl: ctrl}
	mock.recorder = &MockBookingRepoInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBookingRepoInterface) EXPECT() *MockBookingRepoInterfaceMockRecorder {
	return m.recorder
}

// CheckAvailableService mocks base method.
func (m *MockBookingRepoInterface) CheckAvailableService(arg0, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckAvailableService", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// CheckAvailableService indicates an expected call of CheckAvailableService.
func (mr *MockBookingRepoInterfaceMockRecorder) CheckAvailableService(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckAvailableService", reflect.TypeOf((*MockBookingRepoInterface)(nil).CheckAvailableService), arg0, arg1, arg2)
}

// Create mocks base method.
func (m *MockBookingRepoInterface) Create(arg0 core.BookingCore) (core.BookingCore, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(core.BookingCore)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockBookingRepoInterfaceMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockBookingRepoInterface)(nil).Create), arg0)
}

// FindAllBookings mocks base method.
func (m *MockBookingRepoInterface) FindAllBookings() ([]core.BookingCore, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindAllBookings")
	ret0, _ := ret[0].([]core.BookingCore)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindAllBookings indicates an expected call of FindAllBookings.
func (mr *MockBookingRepoInterfaceMockRecorder) FindAllBookings() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindAllBookings", reflect.TypeOf((*MockBookingRepoInterface)(nil).FindAllBookings))
}

// FindBookingById mocks base method.
func (m *MockBookingRepoInterface) FindBookingById(arg0 string) (core.BookingCore, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindBookingById", arg0)
	ret0, _ := ret[0].(core.BookingCore)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindBookingById indicates an expected call of FindBookingById.
func (mr *MockBookingRepoInterfaceMockRecorder) FindBookingById(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindBookingById", reflect.TypeOf((*MockBookingRepoInterface)(nil).FindBookingById), arg0)
}

// FindBookingByInvoice mocks base method.
func (m *MockBookingRepoInterface) FindBookingByInvoice(arg0 string) (core.BookingCore, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindBookingByInvoice", arg0)
	ret0, _ := ret[0].(core.BookingCore)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindBookingByInvoice indicates an expected call of FindBookingByInvoice.
func (mr *MockBookingRepoInterfaceMockRecorder) FindBookingByInvoice(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindBookingByInvoice", reflect.TypeOf((*MockBookingRepoInterface)(nil).FindBookingByInvoice), arg0)
}

// FindServiceByID mocks base method.
func (m *MockBookingRepoInterface) FindServiceByID(arg0 string) (core.ServiceCore, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindServiceByID", arg0)
	ret0, _ := ret[0].(core.ServiceCore)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindServiceByID indicates an expected call of FindServiceByID.
func (mr *MockBookingRepoInterfaceMockRecorder) FindServiceByID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindServiceByID", reflect.TypeOf((*MockBookingRepoInterface)(nil).FindServiceByID), arg0)
}

// FindUserEmails mocks base method.
func (m *MockBookingRepoInterface) FindUserEmails(arg0 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindUserEmails", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindUserEmails indicates an expected call of FindUserEmails.
func (mr *MockBookingRepoInterfaceMockRecorder) FindUserEmails(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindUserEmails", reflect.TypeOf((*MockBookingRepoInterface)(nil).FindUserEmails), arg0)
}

// FindUserName mocks base method.
func (m *MockBookingRepoInterface) FindUserName(arg0 string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindUserName", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// FindUserName indicates an expected call of FindUserName.
func (mr *MockBookingRepoInterfaceMockRecorder) FindUserName(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindUserName", reflect.TypeOf((*MockBookingRepoInterface)(nil).FindUserName), arg0)
}

// GetAllHistories mocks base method.
func (m *MockBookingRepoInterface) GetAllHistories(arg0 string) ([]core.BookingCore, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllHistories", arg0)
	ret0, _ := ret[0].([]core.BookingCore)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllHistories indicates an expected call of GetAllHistories.
func (mr *MockBookingRepoInterfaceMockRecorder) GetAllHistories(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllHistories", reflect.TypeOf((*MockBookingRepoInterface)(nil).GetAllHistories), arg0)
}

// GetPriceService mocks base method.
func (m *MockBookingRepoInterface) GetPriceService(arg0 string) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPriceService", arg0)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPriceService indicates an expected call of GetPriceService.
func (mr *MockBookingRepoInterfaceMockRecorder) GetPriceService(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPriceService", reflect.TypeOf((*MockBookingRepoInterface)(nil).GetPriceService), arg0)
}

// GetSpecificHistory mocks base method.
func (m *MockBookingRepoInterface) GetSpecificHistory(arg0, arg1 string) (core.BookingCore, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSpecificHistory", arg0, arg1)
	ret0, _ := ret[0].(core.BookingCore)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSpecificHistory indicates an expected call of GetSpecificHistory.
func (mr *MockBookingRepoInterfaceMockRecorder) GetSpecificHistory(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSpecificHistory", reflect.TypeOf((*MockBookingRepoInterface)(nil).GetSpecificHistory), arg0, arg1)
}

// UpdateStatusInovice mocks base method.
func (m *MockBookingRepoInterface) UpdateStatusInovice(arg0 string, arg1 core.BookingCore) (core.BookingCore, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateStatusInovice", arg0, arg1)
	ret0, _ := ret[0].(core.BookingCore)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateStatusInovice indicates an expected call of UpdateStatusInovice.
func (mr *MockBookingRepoInterfaceMockRecorder) UpdateStatusInovice(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateStatusInovice", reflect.TypeOf((*MockBookingRepoInterface)(nil).UpdateStatusInovice), arg0, arg1)
}
